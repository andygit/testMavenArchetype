<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

    <bean id="customerService" class="test.spring.aop.service.CustomerService">
        <property name="name" value="LeiOOLei" />
        <property name="url" value="http://www.cnblogs.com/leiOOlei/" />
    </bean>
    <bean id="customerServ" class="test.spring.aop.service.CustomerService">
        <property name="name" value="LeiOOLei2" />
        <property name="url" value="http://www.cnblogs.com/leiOOlei2/" />
    </bean>

    <bean id="hijackBeforeAdvice" class="test.spring.aop.advice.HijackBeforeAdvice"/>
    <bean id="hijackAfterAdvice" class="test.spring.aop.advice.HijackAfterAdvice"/>
    <bean id="hijackThrowsAdvice" class="test.spring.aop.advice.HijackThrowsAdvice"/>
    <bean id="methodInterceptorAdvice" class="test.spring.aop.advice.MethodInterceptorAdvice"/>

    <bean id="customerServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customerServ"/>
        <property name="interceptorNames">
            <list>
                <value>hijackBeforeAdvice</value>
                <value>hijackAfterAdvice</value>
                <value>hijackThrowsAdvice</value>
                <value>methodInterceptorAdvice</value>
                <value>customerAdvisor</value>
                <value>customerRegexpAdvisor</value>
            </list>
        </property>
    </bean>

    <!--<bean id="customerPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">-->
        <!--<property name="mappedName" value="printName"/>-->
    <!--</bean>-->
    <!--<bean id="customerAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">-->
        <!--<property name="pointcut" ref="customerPointcut"/>-->
        <!--<property name="advice" ref="methodInterceptorAdvice"/>-->
    <!--</bean>-->
    <!--上面的两个bean配置可以合并为一个bean-->
    <bean id="customerAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="mappedName" value="printName"/>
        <property name="advice" ref="methodInterceptorAdvice"/>
    </bean>

    <bean id="customerRegexpAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="patterns">
            <list>
                <value>.*URL.*</value>
            </list>
        </property>
        <property name="advice" ref="methodInterceptorAdvice"/>
    </bean>

    <!--
    加上这个BeanNameAutoProxyCreator bean后，AopTest.aoptest2()方法就会报错java.lang.ClassCastException
    把这个bean去掉后，AopTest.aoptest2()可以正常运行
    这是因为customerService被自动创建了代理，再用ProxyFactoryBean代理就会有问题
    可以再创建一个customerServ的bean，让ProxyFactoryBean代理customerServ，这样就不会有问题了
     -->
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <list>
                <value>*Service</value>
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hijackBeforeAdvice</value>
                <value>hijackAfterAdvice</value>
                <value>hijackThrowsAdvice</value>
                <value>methodInterceptorAdvice</value>
                <value>customerAdvisor</value>
                <value>customerRegexpAdvisor</value>
            </list>
        </property>
    </bean>

</beans>